install.packages("gapminder")
?htmltools.dir.version
?options
devtools::install_github("yihui/xaringan")
library(xfun)
remove.packages("xfun", lib="~/R/win-library/3.6")
devtools::install_github("yihui/xaringan")
devtools::install_github("yihui/xaringan")
devtools::install_github("yihui/xaringan")
install.pacakges("digest")
install.packages("digest")
devtools::install_github("yihui/xaringan")
update.packages("Rcpp")
remove.packages("Rcpp", lib="~/R/win-library/3.6")
devtools::install_github("yihui/xaringan")
install.packages("Rcpp")
devtools::install_github("yihui/xaringan")
?Sys.Date
?purl
options(htmltools.dir.version = FALSE)
library(dplyr)
library(gapminder)
gapminder %>% filter(country == "Canada") %>% head(2)
yugoslavia %>% lm(pop ~ year, data = .)
yugoslavia %>% arrange(year, desc(pop))
former_yugoslavia <- c("Bosnia and Herzegovina", "Croatia", #<<
"Macedonia", "Montenegro", "Serbia", "Slovenia") #<<
yugoslavia <- gapminder %>% filter(country %in% former_yugoslavia)
tail(yugoslavia, 2)
yugoslavia %>% arrange(year, desc(pop))
yugoslavia %>% select(country, year, pop) %>% head(4)
yugoslavia %>% select(-continent, -pop, -lifeExp) %>% head(4)
yugoslavia %>% select(-continent, -pop, -gdpPercap) %>% head(4)
DYS %>% select(starts_with("married"))
DYS %>% select(starts_with("married"))
yugoslavia %>%
select(Life_Expectancy = lifeExp) %>%
head(4)
yugoslavia %>%
select(country, Life_Expectancy = lifeExp) %>%
head(4)
?starts_with
billboard %>% select(starts_with("wk"))
install.packages("gapminder", "billboard")
install.packages("gapminder", "billboard")
install.packages(c("gapminder", "billboard"))
install.packages(c("gapminder", "billboard"))
options(htmltools.dir.version = FALSE)
library(gapminder); library(billboard)
head(billboard)
head(gapminder)
billboard %>% select(starts_with("wk"))
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
billboard %>% select(starts_with("wk"))
head(billboard)
head(billboard, 3)
billboard %>% select(num_range("wk", 10:!5))
billboard %>% select(artist, track, num_range("wk", 10:!5))
billboard %>% select(artist, track, num_range("wk", 10:!5)) %>% head(3)
billboard %>%
select(artist, date = date.entered) %>%
head(4)
yugoslavia %>%
select(country, year, lifeExp) %>%
rename(Life_Expectancy = lifeExp) %>%
head(4)
yugoslavia %>% filter(country == "Serbia") %>%
select(year, pop, lifeExp) %>%
mutate(pop_million = pop / 1000000, #<<
life_exp_past_40 = lifeExp - 40) %>% #<<
head(5)
yugoslavia %>%
filter(year == 1982) %>%
summarize(n_obs = n(),
total_pop = sum(pop),
mean_life_exp = mean(lifeExp),
range_life_exp = max(lifeExp) - min(lifeExp))
yugoslavia %>%
filter(year == 1982) %>%
summarize_at(vars(lifeExp, pop), list(~mean(.), ~sd(.)))
yugoslavia %>%
filter(year == 1982) %>%
summarize_at(vars(lifeExp, pop), funs = list(~mean(.), ~sd(.)))
yugoslavia %>%
filter(year == 1982) %>%
summarize_at(vars(lifeExp, pop), list(~mean(.), ~sd(.)))
yugoslavia %>% summarize_all(funs(mean, sd))
head(yugoslavia)
yugoslavia %>% select(year, lifeExp, pop, gdpPercap) %>% summarize_all(funs(mean, sd))
yugoslavia %>% summarize_if(is.numeric, funs(mean, sd))
head(yugoslavia)
yugoslavia %>%
group_by(year) %>% #<<
summarize(num_countries = n_distinct(country),
total_pop = sum(pop),
total_gdp_per_cap = sum(pop*gdpPercap)/total_pop) %>%
head(4)
?lag
yugoslavia %>%
select(country, year, pop) %>%
filter(year >= 2002) %>%
group_by(country) %>%
mutate(lag_pop = dplyr::lag(pop, order_by = year),
pop_chg = pop - lag_pop) %>%
head(4)
enrollment <-
tibble(Program = c("Evans School", "Arts & Sciences",
"Public Health", "Other"),
Female  = c(10, 5, 2, 5),
Male    = c(6, 6, 3, 1))
pander::pander(enrollment, style="rmarkdown")
(enrollment_wide <- enrollment %>%
pivot_longer(-Program, names_to="Gender", values_to="Count"))
enrollment_long %>%
pivot_wider(names_from="Gender", values_from="Count")
(enrollment_long <- enrollment %>%
pivot_longer(-Program, names_to="Gender", values_to="Count"))
enrollment_long %>%
pivot_wider(names_from="Gender", values_from="Count")
yugoslavia %>%
filter(year == 1982) %>%
summarize(across(c(lifeExp, pop), list(avg = ~mean(.), sd = ~sd(.))))
options(htmltools.dir.version = FALSE)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
billboard %>% select(artist, track, date.entered, wk1, wk2, wk3) %>% head(3)
billboard %>% select(artist, track, num_range("wk", 10:15)) %>% head(3)
billboard %>% select(artist:wk3) %>% head(3)
(enrollment_wide <- enrollment_long %>%
pivot_wider(names_from=Gender, values_from=Count))
## ---- eval=FALSE--------------------------------------------------------------------------------------------
## install.packages("tidyverse")
library(tidyverse)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
## install.packages("gapminder")
## install.packages("billboard")
library(gapminder); library(billboard)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
## install.packages("tidyverse")
library(tidyverse)
gapminder %>% filter(country == "Canada") %>% head(2)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
yugoslavia %>% lm(pop ~ year, data = .)
gapminder %>% lm(pop ~ year, data = .)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
lm_pop_year <- gapminder %>%
filter(continent == "Americas") %>%
lm(pop ~ year, data = .)
View(lm_pop_year)
## -----------------------------------------------------------------------------------------------------------
gapminder %>% filter(country == "Oman") %>% head(8)
## -----------------------------------------------------------------------------------------------------------
gapminder %>%
filter(country == "Oman" &
year > 1980 &
year <= 2000 )
## -----------------------------------------------------------------------------------------------------------
former_yugoslavia <- c("Bosnia and Herzegovina", "Croatia", #<<
"Macedonia", "Montenegro", "Serbia", "Slovenia") #<<
yugoslavia <- gapminder %>% filter(country %in% former_yugoslavia)
tail(yugoslavia, 2)
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>% arrange(year, desc(pop))
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>% select(country, year, pop) %>% head(4)
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>% select(-continent, -pop, -gdpPercap) %>% head(4)
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>% select(-continent, -pop, -gdpPercap) %>% head(4)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
billboard %>% select(artist:wk3) %>% head(2)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
billboard %>%
select(artist:wk3) %>%
head(2)
## -----------------------------------------------------------------------------------------------------------
billboard %>%
select(artist, track, num_range("wk", 10:13)) %>%
head(2)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
yugoslavia %>% select(year, lifeExp, pop, gdpPercap) %>% summarize_all(funs(mean, sd))
## ---- eval=FALSE--------------------------------------------------------------------------------------------
yugoslavia %>% summarize_if(is.numeric, funs(mean, sd))
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
select(country, year, pop) %>%
filter(year >= 2002) %>%
group_by(country) %>%
mutate(lag_pop = dplyr::lag(pop, order_by = year),
pop_chg = pop - lag_pop) %>%
head(4)
## -----------------------------------------------------------------------------------------------------------
enrollment <-
tibble(Program = c("Evans School", "Arts & Sciences",
"Public Health", "Other"),
Female  = c(10, 5, 2, 5),
Male    = c(6, 6, 3, 1))
pander::pander(enrollment, style="rmarkdown")
## -----------------------------------------------------------------------------------------------------------
(enrollment_wide <- enrollment %>%
pivot_longer(-Program, names_to="Gender", values_to="Count"))
## -----------------------------------------------------------------------------------------------------------
(enrollment_long <- enrollment %>%
pivot_longer(-Program, names_to="Gender", values_to="Count"))
## -----------------------------------------------------------------------------------------------------------
## install.packages("tidyverse")
library(tidyverse)
## -----------------------------------------------------------------------------------------------------------
## install.packages("gapminder")
## install.packages("billboard")
library(gapminder); library(billboard)
## -----------------------------------------------------------------------------------------------------------
head(gapminder, 3)
gapminder %>% filter(country == "Canada") %>% head(2)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
gapminder %>%
lm(pop ~ year)
, data = .
## ---- eval=FALSE--------------------------------------------------------------------------------------------
gapminder %>%
lm(pop ~ year, data = .)
## ---- eval=FALSE--------------------------------------------------------------------------------------------
lm_pop_year <- gapminder %>%
filter(continent == "Americas") %>%
lm(pop ~ year, data = .)
## -----------------------------------------------------------------------------------------------------------
gapminder %>%
filter(country == "Oman" &
year > 1980 &
year <= 2000 )
## -----------------------------------------------------------------------------------------------------------
former_yugoslavia <- c("Bosnia and Herzegovina", "Croatia",
"Macedonia", "Montenegro", "Serbia", "Slovenia")
yugoslavia <- gapminder %>% filter(country %in% former_yugoslavia)
tail(yugoslavia, 2)
yugoslavia
unique(gapminder$country)
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
arrange(year, desc(pop))
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
select(country, year, pop) %>% head(4)
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
select(-continent, -pop, -gdpPercap) %>% head(4)
names(yugoslavia)
## -----------------------------------------------------------------------------------------------------------
billboard %>%
select(artist:wk3) %>%
head(2)
names(billboard)
dim(billboard)
## -----------------------------------------------------------------------------------------------------------
billboard %>%
select(artist, track, num_range("wk", 10:13)) %>%
head(2)
## -----------------------------------------------------------------------------------------------------------
billboard %>%
select(artist, track, num_range("wk", 10:13)) %>%
head(3)
names(billboard)
## -----------------------------------------------------------------------------------------------------------
billboard %>%
select(artist, date = date.entered) %>%
head(4)
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
select(country, year, lifeExp) %>%
rename(Life_Expectancy = lifeExp) %>%
head(4)
## -----------------------------------------------------------------------------------------------------------
gapminder %>%
mutate(gdpPercap_ordinal =
case_when(
gdpPercap <  700 ~ "low",
gdpPercap >= 700 & gdpPercap < 800 ~ "moderate",
TRUE ~ "high" )) %>% # Value when all other statements are TRUE
slice(6:9) # get rows 6 through 9
# SUMMARIZING DATA
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
filter(year == 1982) %>%
summarize(n_obs = n(),
total_pop = sum(pop),
mean_life_exp = mean(lifeExp),
range_life_exp = max(lifeExp) - min(lifeExp))
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
filter(year == 1982) %>%
summarize(across(c(lifeExp, pop), list(avg = ~mean(.), sd = ~sd(.))))
## ---- eval=FALSE--------------------------------------------------------------------------------------------
yugoslavia %>%
select(year, lifeExp, pop, gdpPercap) %>%
summarize_all(funs(mean, sd))
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
select(year, lifeExp, pop, gdpPercap) %>%
summarize_all(funs(mean, sd))
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
summarize_if(is.numeric, funs(mean, sd))
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
group_by(year) %>% #<<
summarize(num_countries = n_distinct(country),
total_pop = sum(pop),
total_gdp_per_cap = sum(pop*gdpPercap)/total_pop) %>%
head(5)
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
group_by(year) %>% #<<
summarize(num_countries = n_distinct(country),
total_pop = sum(pop),
total_gdp_per_cap = sum(pop*gdpPercap)/total_pop) %>%
head(5)
## -----------------------------------------------------------------------------------------------------------
yugoslavia %>%
select(country, year, pop) %>%
filter(year >= 2002) %>%
group_by(country) %>%
mutate(lag_pop = dplyr::lag(pop, order_by = year),
pop_chg = pop - lag_pop) %>%
head(4)
## -----------------------------------------------------------------------------------------------------------
enrollment <-
tibble(Program = c("Evans School", "Arts & Sciences",
"Public Health", "Other"),
Female  = c(10, 5, 2, 5),
Male    = c(6, 6, 3, 1))
pander::pander(enrollment, style="rmarkdown")
## -----------------------------------------------------------------------------------------------------------
(enrollment_long <- enrollment %>%
pivot_longer(-Program, names_to="Gender", values_to="Count"))
## -----------------------------------------------------------------------------------------------------------
(enrollment_wide <- enrollment_long %>%
pivot_wider(names_from="Gender", values_from="Count"))
